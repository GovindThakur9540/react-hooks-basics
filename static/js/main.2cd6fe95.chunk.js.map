{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","age","setAge","age1","setAge1","siblingsNum","setSiblingsNum","age2","siblingsNum1","state","setState","handleClick","val","count","setCount","age3","setAge2","useEffect","document","title","onClick","bind","prevCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOA6EeA,MA1Ef,WAAe,MAGSC,mBAAS,IAHlB,mBAGNC,EAHM,KAGDC,EAHC,OASWF,mBAAS,IATpB,mBASNG,EATM,KASAC,EATA,OAUwBJ,mBAAS,IAVjC,mBAUPK,EAVO,KAUMC,EAVN,OAiBaN,mBAAS,CAAEO,KAAM,GAAIC,aAAc,IAjBhD,mBAiBNC,EAjBM,KAiBCC,EAjBD,KAkBPC,EAAc,SAAAC,GAAG,OACrBF,EAAS,2BACJD,GADG,kBACKG,EAAMH,EAAMG,GAAK,MAEzBL,EAAsBE,EAAtBF,KAAMC,EAAgBC,EAAhBD,aAtBA,EA0BWR,mBAAS,GA1BpB,mBA0BPa,EA1BO,KA0BAC,EA1BA,OA8BUd,mBAAS,GA9BnB,mBA8BPe,EA9BO,KA8BDC,EA9BC,KAoCb,OAJAC,qBAAU,WACRC,SAASC,MAAQ,UAAYJ,EAAO,gBAIpC,gCACE,0CACA,6CAAgBd,EAAhB,mBACA,wBAAQmB,QApCY,WACtBlB,EAAOD,EAAI,IAmCT,wBAGA,gDACA,6CAAgBE,EAAhB,mBACA,yCAAYE,EAAZ,eACA,wBAAQe,QAnCM,kBAAMhB,EAAQD,EAAK,IAmCjC,wBACA,wBAAQiB,QAnCc,kBACxBd,EAAeD,EAAa,IAkC1B,4BAGA,8CACA,6CAAgBE,EAAhB,mBACA,yCAAYC,EAAZ,eACA,wBAAQY,QAAST,EAAYU,KAAK,KAAM,QAAxC,wBACA,wBAAQD,QAAST,EAAYU,KAAK,KAAM,gBAAxC,4BAGA,qDACA,iDAAoBR,KACpB,wBAAQO,QAAS,kBAAMN,EAAS,IAAhC,mBACA,wBAAQM,QAAS,kBAAMN,GAAS,SAAAQ,GAAS,OAAEA,EAAU,MAArD,qBACA,wBAAQF,QAAS,kBAAMN,GAAS,SAAAQ,GAAS,OAAEA,EAAU,MAArD,qBAEA,2CACA,sFACA,wBAAQF,QAlCS,kBAAMJ,EAAQD,EAAK,IAkCpC,gCCxDSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.2cd6fe95.chunk.js","sourcesContent":["import React, { useEffect, useState,  useContext, createContext} from 'react';\n\n\nfunction App() {\n\n  //useState\n  const [age, setAge] = useState(24)\n  const handleChangeAge = () =>{\n    setAge(age+1)\n  }\n\n  //multiple state\n  const [age1, setAge1] = useState(19)\n  const[siblingsNum, setSiblingsNum] = useState(10)\n  const handleAge = () => setAge1(age1+1)\n  const handleSiblingsNum = () =>\n    setSiblingsNum(siblingsNum +1)\n\n\n  //object state\n  const [state, setState] = useState({ age2: 19, siblingsNum1: 4})\n  const handleClick = val =>\n    setState({\n      ...state, [val]: state[val]+1\n    })\n  const {age2, siblingsNum1} = state\n\n  //state from function\n\n  const[count, setCount] =useState(8)\n\n  //useEffect\n\n  const[age3, setAge2] = useState(0)\n  const handleClick1 = () => setAge2(age3+1)\n  useEffect(()=> {\n    document.title = 'You are' + age3 + 'years old!'\n  })\n  \n  return (\n    <div>\n      <h1>useState</h1>\n      <h3>Today I am {age} Years of Age</h3>\n      <button onClick={handleChangeAge}>Get older!</button>\n\n\n      <h1>multiple state</h1>\n      <h3>Today I am {age1} Years of Age</h3>\n      <h3>I have {siblingsNum} siblings</h3>\n      <button onClick={handleAge}>Get older!</button>\n      <button onClick={handleSiblingsNum}>More Siblings!</button>\n\n\n      <h1>Object state</h1>\n      <h3>Today I am {age2} Years of Age</h3>\n      <h3>I have {siblingsNum1} siblings</h3>\n      <button onClick={handleClick.bind(null, 'age2')}>Get older!</button>\n      <button onClick={handleClick.bind(null, 'siblingsNum1')}>More siblings!</button> \n\n      \n      <h1>state from function</h1>\n      <h3>Count value is:{count}</h3>\n      <button onClick={() => setCount(0)}>Reset</button>\n      <button onClick={() => setCount(prevCount=>prevCount+1)}>Plus(+)</button>\n      <button onClick={() => setCount(prevCount=>prevCount-1)}>Plus(-)</button>\n\n      <h1>useEffect</h1>\n      <h3>Look at the title of the current tab in your browser</h3>\n      <button onClick={handleClick1}>Update Title!!</button>\n\n    </div>\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}